#!/usr/bin/env perl
=rem
Необходимо реализовать программу которая принимает на стандартный ввод текст и обрабатывает его в соответствии с
заданными опциями командной строки.

Обязательные параметры:

- `-k|--key=X` - Задаёт номер колонки по которой выполняется агрегация (обязательный параметр)
- `-l|--limit=X` - Для каждого уникального значения из колонки `--key` вывести первые `X` указанных строк

Дополнительно:
- `--count` - Для каждого ключа вывести количество сколько раз он встречается
- `--max=X` - Для каждого ключа вывести максимальное значение из столбца `X`
- `--min=X` - Для каждого ключа вывести минимальное значение из столбца `X`
- `--sum=X` - Для каждого ключа вывести сумму значения из столбца `X`
- `--avg=X` - Для каждого ключа вывести среднее значение из столбца `X`

Пример:

```
$ cat data
Once    1       2       3       4
Twice   2       3       4       5
Twice   3       4       5       6

$ cat data | group_by --key 1 --limit 1
Once    1       2       3       4
Twice   2       3       4       5

$ cat data | group_by --key 1 --count --avg=3
Key   COUNT AVG
Once  1     2
Twice 2     3.5

$ cat data | group_by --key 1 --limit 1 --count --max=2 --min=3 --sum=4 --avg=5
Once    1       2       3       4
Twice   2       3       4       5

Key   COUNT MAX MIN SUM AVG
Once  1     1   2   3   4
Twice 2     3   3   9   5.5
```
=cut

use strict;
use warnings;
use 5.016;

use Getopt::Long;
#use Getopt::Long::Configure('bundling');

my $key_arg;
my $limit_arg = 0;
my $count_arg = 0;
my $max_arg = 0;
my $min_arg = 0;
my $sum_arg = 0;
my $avg_arg = 0;

GetOptions (
	'k|key=i' => \$key_arg,
	'l|limit=i' => \$limit_arg,
	'count' => \$count_arg,
	'max=i' => \$max_arg,
	'min=i' => \$min_arg,
	'sum=i' => \$sum_arg,
	'avg=i' => \$avg_arg,
);

unless (defined $key_arg) { die "Не задан обязательный параметр 'k'\n"; }
if ($key_arg < 1) { die "Нумерация начинается с 1\n"; }
$key_arg--;


my $cur_iter = 0;
my %key_count;
my %key_max;
my %key_min;
my %key_sum;
my %key_avg;
my @outputs;

say "KEY   ".("COUNT" x $count_arg).(" MAX" x $max_arg).(" MIN" x $min_arg).(" SUM" x $sum_arg).(" AVG" x $avg_arg);

while (<>) {
	chomp;

	my $uniq_key = (split(" ", $_))[$key_arg];

	if (exists $key_count{$uniq_key}) {
		if ($key_count{$uniq_key} < $limit_arg) {
			push @outputs, $_; 
			$key_count{$uniq_key}++;
		}

	}
	else {
		$key_count{$uniq_key} = 1;
		push @outputs, $_;
	}

}

say for @outputs;